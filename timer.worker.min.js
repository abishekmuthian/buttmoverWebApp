let task25Id,break5Id,break30Id,timer25=1500,timer5=300,timer30=1800,minute=0,second=0,taskcompleted=!1,taskcount=0,breakcount=0,lifecount=0,buttontrigger=!1,newgame=!0;function handleReset(){newgame=!0,taskcount=0,breakcount=0,lifecount=100,handleClearTask(),handleClearBreak()}function handleClearBreak(){clearInterval(break5Id),timer5=300,clearInterval(break30Id),timer30=1800,minute=0,second=0,lifecount=newgame?100:100*breakcount/taskcount,self.postMessage({event:"scoreUpdate",breaks:breakcount,moves:taskcount,lifes:lifecount,newg:newgame})}function handleClearTask(){clearInterval(task25Id),timer25=1500,minute=0,second=0,lifecount=newgame?100:100*breakcount/taskcount,self.postMessage({event:"scoreUpdate",breaks:breakcount,moves:taskcount,lifes:lifecount,newg:newgame})}function handleTask(){task25Id=setInterval((async function(){taskcompleted=!1,timer25--,second++,second>59&&(second=0,minute++),self.postMessage({event:"setTick",minute:minute,second:second,moveYourAss:!1,bringYourAssBack:!1,timerLabel:"Task"}),0===timer25&&(taskcount++,lifecount=100*breakcount/taskcount,1===taskcount?(newgame=!0,lifecount=100,self.postMessage({event:"scoreUpdate",breaks:breakcount,moves:taskcount,lifes:lifecount,newg:newgame}),lifecount=100):(newgame=!1,self.postMessage({event:"scoreUpdate",breaks:breakcount,moves:taskcount,lifes:lifecount,newg:newgame})),taskcompleted=!0,clearInterval(task25Id),timer25=1500,self.postMessage({event:"setTick",minute:minute,second:second,moveYourAss:!0,bringYourAssBack:!1,timerLabel:"Task"}),minute=0,second=0,self.postMessage({event:"metricUpdate",task:!0,break:void 0}))}),1e3)}function handleBreak(){0!==taskcount&&taskcount<5&&taskcompleted?break5Id=setInterval((async function(){timer5--,second++,second>59&&(second=0,minute++),self.postMessage({event:"setTick",minute:minute,second:second,moveYourAss:!1,bringYourAssBack:!1,timerLabel:"Break"}),0===timer5&&(clearInterval(break5Id),breakcount++,lifecount=100*breakcount/taskcount,self.postMessage({event:"scoreUpdate",breaks:breakcount,moves:taskcount,lifes:lifecount,newg:newgame}),timer5=300,self.postMessage({event:"setTick",minute:minute,second:second,moveYourAss:!1,bringYourAssBack:!0,timerLabel:"Break"}),minute=0,second=0,self.postMessage({event:"metricUpdate",task:void 0,break:!0}))}),1e3):0!==taskcount&&taskcount%5==0&&taskcompleted?break30Id=setInterval((async function(){timer30--,second++,second>59&&(second=0,minute++),self.postMessage({event:"setTick",minute:minute,second:second,moveYourAss:!1,bringYourAssBack:!1,timerLabel:"Break"}),0===timer30&&(clearInterval(break30Id),breakcount++,lifecount=100*breakcount/taskcount,self.postMessage({event:"scoreUpdate",breaks:breakcount,moves:taskcount,lifes:lifecount,newg:newgame}),timer30=1800,self.postMessage({event:"setTick",minute:minute,second:second,moveYourAss:!1,bringYourAssBack:!0,timerLabel:"Break"}),minute=0,second=0,self.postMessage({event:"metricUpdate",task:void 0,break:!0}))}),1e3):(self.postMessage({event:"setTick",minute:minute,second:second,moveYourAss:!1,bringYourAssBack:!0,timerLabel:"Break"}),minute=0,second=0),newgame&&1===taskcount&&(newgame=!1)}self.onmessage=function(e){switch(e.data.mode){case"buttonpress":buttontrigger=!0;break;case"buttonrelease":buttontrigger=!1}switch(e.data.event){case"clearbreak":handleClearBreak();break;case"cleartask":handleClearTask();break;case"task":handleTask();break;case"break":handleBreak();break;case"reset":handleReset()}};
